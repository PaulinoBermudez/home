#BlueJ class context
comment0.target=GameGrid
comment1.params=dimension
comment1.target=GameGrid(int)
comment1.text=\r\n\ Constructor\ initializes\ the\ variables\ and\ arrays\ for\ other\ methods,\r\n\ attempts\ to\ create\ a\ grid\ tries\ at\ most\ 50\ times,\ takes\ the\ best\ grid\ and\r\n\ uses\ it\ for\ the\ puzzle.\r\n\ \r\n\ @param\ dimension\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ dimensions\ of\ a\ sudoku\ grid,\ i.e.\ 9\ \=\ 9x9\ grid\r\n
comment10.params=ansiFormatted
comment10.target=java.lang.String\ toString(java.lang.Boolean)
comment10.text=\r\n\ Runs\ through\ the\ grid\ array\ and\ formats\ the\ stored\ values\ into\ a\ 9x9\ grid\r\n\ of\ numbers\r\n\ \r\n\ @param\ ansiFormatted\r\n\ \ \ \ \ \ \ \ \ \ \ \ Returns\ a\ formatted\ board\ if\ true\r\n\ @return\ The\ sudoku\ game\ grid\ as\ a\ formatted\ String\r\n\ @see\ StringBuffer\r\n
comment11.params=
comment11.target=void\ gridCopy()
comment2.params=x\ y\ number
comment2.target=void\ setNumber(java.lang.Integer,\ java.lang.Integer,\ java.lang.Integer)
comment2.text=\r\n\ Changes\ the\ specified\ number\ in\ the\ "givens"\ array\r\n\ @param\ x\ The\ column\ position\ of\ the\ number\r\n\ @param\ y\ The\ row\ position\ of\ the\ number\r\n\ @param\ number\ The\ number\ to\ be\ inserted\ into\ the\ array\r\n
comment3.params=number
comment3.target=void\ setNumber(java.lang.Integer)
comment3.text=\r\n\ Sets\ the\ currently\ selected\ number\r\n\ @param\ number\ The\ number\ to\ set\ to\r\n
comment4.params=grid_\ box\ row\ column\ level
comment4.target=boolean\ create(int[][],\ boolean[][],\ boolean[][],\ boolean[][],\ int)
comment4.text=\r\n\ Method\ attempts\ to\ create\ a\ solvable\ grid\r\n\ \r\n\ @param\ grid_\r\n\ \ \ \ \ \ \ \ \ \ \ \ The\ 2d\ array\ that\ will\ hold\ the\ puzzle\r\n\ @param\ box\r\n\ \ \ \ \ \ \ \ \ \ \ \ 2d\ boolean\ array\ of\ a\ 3x3\ box\r\n\ @param\ row\r\n\ \ \ \ \ \ \ \ \ \ \ \ 2d\ boolean\ array\ of\ possible\ values\ at\ for\ the\ row\r\n\ @param\ column\r\n\ \ \ \ \ \ \ \ \ \ \ \ 2d\ boolean\ array\ of\ possible\ values\ at\ for\ the\ column\r\n\ @param\ level\r\n\ \ \ \ \ \ \ \ \ \ \ \ Starting\ difficulty\ of\ the\ puzzle\r\n\ @return\ If\ true\ is\ returned\ then\ a\ puzzle\ has\ been\ successfully\ made,\r\n\ \ \ \ \ \ \ \ \ otherwise\ it\ hasn't.\r\n
comment5.params=
comment5.target=int\ solvable()
comment5.text=\r\n\ Method\ validates\ whether\ or\ not\ the\ grid\ is\ solvable\r\n\ \r\n\ @return\ An\ integer\ is\ returned\ representing\ the\ difficulty\ of\ the\ puzzle,\r\n\ \ \ \ \ \ \ \ \ if\ it\ is\ not\ solvable\ 0\ is\ returned\r\n
comment6.params=
comment6.target=int[]\ permutateList()
comment6.text=\r\n\ Helps\ to\ make\ the\ grid\ more\ random\r\n\ \r\n\ @return\ List\ of\ numbers\ 1-9\r\n
comment7.params=
comment7.target=void\ cleanGrid()
comment7.text=\r\n\ Method\ clears\ the\ grid\ all\ values\ are\ set\ to\ zero,\ boolean\ arrays\ are\ set\r\n\ to\ true\r\n
comment8.params=showHowMany
comment8.target=void\ randomGiven(int)
comment9.params=
comment9.target=void\ addRandomGiven()
numComments=12
